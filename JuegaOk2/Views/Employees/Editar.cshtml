@model Modelo.Models.EmployeeViewModel
@{
    ViewBag.Title = "Editar";
    var imgSrc = String.Format("data:image/gif;base64,{0}", ViewBag.Imagen);
}

@using (Html.BeginForm("Editar", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal container">
    <br />
    <h4>Editar Empleado</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EmployeeID)
    @Html.HiddenFor(model => model.Eliminado)
    @Html.HiddenFor(model => model.PhotoPath)
    @Html.HiddenFor(model => model.RowVersion)
    @Html.HiddenFor(model => model.Photo)

    <div class="form-group">
        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Nombre", maxlength = "10" } })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Apellido", maxlength = "20" } })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Título", maxlength = "30" } })
        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.TitleOfCourtesy, new { htmlAttributes = new { @class = "form-control", placeholder = "Título de Cortesía", maxlength = "25" } })
        @Html.ValidationMessageFor(model => model.TitleOfCourtesy, "", new { @class = "text-danger" })
    </div>

    <div class="form-group" style="position: relative">
        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control datetimepicker1", placeholder = "Fecha de Nacimiento" } })
        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group" style="position: relative">
        @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control datetimepicker1", placeholder = "Fecha de Contratación" } })
        @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Dirección", maxlength = "60" } })
        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = "Ciudad", maxlength = "15" } })
        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.EditorFor(model => model.Region, new { htmlAttributes = new { @class = "form-control", placeholder = "Región", maxlength = "15" } })
        @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Código Postal", maxlength = "10" } })
        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", placeholder = "País", maxlength = "15" } })
        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { @class = "form-control", placeholder = "Teléfono", maxlength = "24", oninput = "this.value = this.value.replace(/[^0-9- + ( )]/g,'')" } })
        @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.EditorFor(model => model.Extension, new { htmlAttributes = new { @class = "form-control", placeholder = "Extensión", maxlength = "4", oninput = "this.value = this.value.replace(/[^0-9]/g,'')" } })
        @Html.ValidationMessageFor(model => model.Extension, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", placeholder = "Notas" } })
        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.DropDownList("ReportsTo", null, "Seleccionar Superior", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ReportsTo, "", new { @class = "text-danger" })
    </div>

    <div>
        <img src="@imgSrc" width="150" height="150" alt="Responsive image" class="img-fluid" />
    </div>

    <div class="form-group">
        @Html.Label("Cambiar foto del Empleado", new { @class = "control-label" })
        <input type="file" name="imageLoad" accept="image/png, .jpeg, .jpg" />
        @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
    </div>

    <br />
    <div class="form-group">
        <div class="col-md-10">
            <input type="submit" value="Guardar" class="btn btn-primary" />
            <a href="~/Employees/Index/" class="btn btn-success">Cancelar</a>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

